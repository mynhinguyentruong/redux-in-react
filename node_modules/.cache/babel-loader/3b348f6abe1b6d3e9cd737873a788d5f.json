{"ast":null,"code":"import { createStore } from \"redux\";\n\nfunction increment() {\n  return {\n    type: \"INCREMENT\"\n  };\n}\n\nfunction decrement() {\n  return {\n    type: \"DECREMENT\"\n  };\n}\n\nfunction reducer() {\n  let count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"INCREMENT\":\n      return count + 1;\n\n    case \"DECREMENT\":\n      return count - 1;\n\n    default:\n      return count;\n  }\n}\n\nconst store = createStore(reducer);\nconsole.log(store);\nstore.subscribe(() => console.log(store.getState()));\nexport default store;","map":{"version":3,"names":["createStore","increment","type","decrement","reducer","count","action","store","console","log","subscribe","getState"],"sources":["/Users/irenenguyen/redux-in-react-practice/redux-in-react/src/redux/index.js"],"sourcesContent":["import {createStore} from \"redux\"\n\nfunction increment() {\n    return {\n        type: \"INCREMENT\"\n    }\n}\n\nfunction decrement() {\n    return {\n        type: \"DECREMENT\"\n    }\n}\n\nfunction reducer(count = 0, action) {\n    switch(action.type) {\n        case \"INCREMENT\":\n            return count + 1\n        case \"DECREMENT\":\n            return count - 1\n        default:\n            return count\n    }\n}\n\n\nconst store = createStore(reducer)\nconsole.log(store)\nstore.subscribe(() => console.log(store.getState()))\nexport default store"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,OAA1B;;AAEA,SAASC,SAAT,GAAqB;EACjB,OAAO;IACHC,IAAI,EAAE;EADH,CAAP;AAGH;;AAED,SAASC,SAAT,GAAqB;EACjB,OAAO;IACHD,IAAI,EAAE;EADH,CAAP;AAGH;;AAED,SAASE,OAAT,GAAoC;EAAA,IAAnBC,KAAmB,uEAAX,CAAW;EAAA,IAARC,MAAQ;;EAChC,QAAOA,MAAM,CAACJ,IAAd;IACI,KAAK,WAAL;MACI,OAAOG,KAAK,GAAG,CAAf;;IACJ,KAAK,WAAL;MACI,OAAOA,KAAK,GAAG,CAAf;;IACJ;MACI,OAAOA,KAAP;EANR;AAQH;;AAGD,MAAME,KAAK,GAAGP,WAAW,CAACI,OAAD,CAAzB;AACAI,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAA,KAAK,CAACG,SAAN,CAAgB,MAAMF,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACI,QAAN,EAAZ,CAAtB;AACA,eAAeJ,KAAf"},"metadata":{},"sourceType":"module"}