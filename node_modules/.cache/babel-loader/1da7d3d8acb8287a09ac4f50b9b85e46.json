{"ast":null,"code":"var _jsxFileName = \"/Users/irenenguyen/redux-in-react-practice/redux-in-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { increment, decrement } from './redux'; // connect is Higher Order Component\n// takes 2 arguments\n// 1st: what parts of the global state does this component want access to\n// 2nd: what actions do you want to be able to dispatch from this component\n// connect(\"What parts of state do you want\", \"What action do you want to dispatch\")\n// connect(mapStateToPropsFunc, mapDispatchToPropsObject)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const count = useSelector(state => state);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.bananas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(decrement()),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(increment()),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n} // function mapStateToProps(globalState) {\n//     // return an object where the keys \n//     // are the name of the props your component want\n//     // and the value are the actual parts\n//     // of global state that your component want\n//     return {\n//         bananas: globalState\n//     }\n// }\n// const mapDispatchToProps = {\n//     oranges: increment,\n//     apples: decrement\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(App)\n\n\n_s(App, \"Hx8ZS0E5Jr/6DPTYqq8Q1lSknko=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useSelector","useDispatch","increment","decrement","App","count","state","dispatch","props","bananas"],"sources":["/Users/irenenguyen/redux-in-react-practice/redux-in-react/src/App.js"],"sourcesContent":["import React from \"react\"\nimport {useSelector, useDispatch} from \"react-redux\"\nimport {increment, decrement} from './redux'\n\n// connect is Higher Order Component\n// takes 2 arguments\n// 1st: what parts of the global state does this component want access to\n// 2nd: what actions do you want to be able to dispatch from this component\n\n// connect(\"What parts of state do you want\", \"What action do you want to dispatch\")\n\n// connect(mapStateToPropsFunc, mapDispatchToPropsObject)\n\nfunction App() {  \n    \n    const count = useSelector(state => state)\n    const dispatch = useDispatch()\n    \n    return (\n        <div>\n            <h1>{props.bananas}</h1>\n            <button onClick={() => dispatch(decrement())}>-</button>\n            <button onClick={() => dispatch(increment())}>+</button>\n        </div>\n    )\n}\n\n// function mapStateToProps(globalState) {\n//     // return an object where the keys \n//     // are the name of the props your component want\n//     // and the value are the actual parts\n//     // of global state that your component want\n\n//     return {\n//         bananas: globalState\n//     }\n// }\n\n// const mapDispatchToProps = {\n//     oranges: increment,\n//     apples: decrement\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(App)\n\nexport default App"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,SAAR,EAAmBC,SAAnB,QAAmC,SAAnC,C,CAEA;AACA;AACA;AACA;AAEA;AAEA;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEX,MAAMC,KAAK,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAV,CAAzB;EACA,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;EAEA,oBACI;IAAA,wBACI;MAAA,UAAKO,KAAK,CAACC;IAAX;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAQ,OAAO,EAAE,MAAMF,QAAQ,CAACJ,SAAS,EAAV,CAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAQ,OAAO,EAAE,MAAMI,QAAQ,CAACL,SAAS,EAAV,CAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,C,CAED;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;GA9BSE,G;UAESJ,W,EACGC,W;;;KAHZG,G;AAgCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}