{"ast":null,"code":"var _jsxFileName = \"/Users/irenenguyen/redux-in-react-practice/redux-in-react/src/App.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { increment, decrement } from './redux'; // connect is Higher Order Component\n// takes 2 arguments\n// 1st: what parts of the global state does this component want access to\n// 2nd: what actions do you want to be able to dispatch from this component\n// connect(\"What parts of state do you want\", \"What action do you want to dispatch\")\n// connect(mapStateToPropsFunc, mapDispatchToPropsObject)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.bananas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.apples,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.oranges,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_c = App;\n\nfunction mapStateToProps(globalState) {\n  // return an object where the keys \n  // are the name of the props your component want\n  // and the value are the actual parts\n  // of global state that your component want\n  return {\n    bananas: globalState\n  };\n}\n\nconst mapDispatchToProps = {\n  oranges: increment,\n  apples: decrement\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","connect","increment","decrement","App","props","bananas","apples","oranges","mapStateToProps","globalState","mapDispatchToProps"],"sources":["/Users/irenenguyen/redux-in-react-practice/redux-in-react/src/App.js"],"sourcesContent":["import React from \"react\"\nimport {connect} from \"react-redux\"\nimport {increment, decrement} from './redux'\n\n// connect is Higher Order Component\n// takes 2 arguments\n// 1st: what parts of the global state does this component want access to\n// 2nd: what actions do you want to be able to dispatch from this component\n\n// connect(\"What parts of state do you want\", \"What action do you want to dispatch\")\n\n// connect(mapStateToPropsFunc, mapDispatchToPropsObject)\n\nfunction App(props) {    \n    return (\n        <div>\n            <h1>{props.bananas}</h1>\n            <button onClick={props.apples}>-</button>\n            <button onClick={props.oranges}>+</button>\n        </div>\n    )\n}\n\nfunction mapStateToProps(globalState) {\n    // return an object where the keys \n    // are the name of the props your component want\n    // and the value are the actual parts\n    // of global state that your component want\n\n    return {\n        bananas: globalState\n    }\n}\n\nconst mapDispatchToProps = {\n    oranges: increment,\n    apples: decrement\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,EAAmBC,SAAnB,QAAmC,SAAnC,C,CAEA;AACA;AACA;AACA;AAEA;AAEA;;;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;EAChB,oBACI;IAAA,wBACI;MAAA,UAAKA,KAAK,CAACC;IAAX;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAQ,OAAO,EAAED,KAAK,CAACE,MAAvB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAQ,OAAO,EAAEF,KAAK,CAACG,OAAvB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH;;KARQJ,G;;AAUT,SAASK,eAAT,CAAyBC,WAAzB,EAAsC;EAClC;EACA;EACA;EACA;EAEA,OAAO;IACHJ,OAAO,EAAEI;EADN,CAAP;AAGH;;AAED,MAAMC,kBAAkB,GAAG;EACvBH,OAAO,EAAEN,SADc;EAEvBK,MAAM,EAAEJ;AAFe,CAA3B;AAKA,eAAeF,OAAO,CAACQ,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CP,GAA7C,CAAf"},"metadata":{},"sourceType":"module"}